The datasheet quotes
"Each device of the MSM6650 family contains a 4-order LPF using the switched
capacitor filter technology. The attenuation is â€“40 dB/oct." and "The cutoff
frequency and LPF frequency change depending on the sampling frequency (fSAM).
The cutoff frequency is 0.4 time as low as the sampling frequency."

The filter is observed to be a Chebyshev type 2 with minimum attenuation 50dB.
I calculate fc = 0.39*fs for a similar Chebyshev type 1. For type 2 this makes
no sense, the given "fc" is probably just a measured -3dB point.

Chebyshev calculation for arbitrary rates is messy so it is a good idea to pick
a master sample rate and precompute coefficients. A good master rate is 64kHz,
the lowest rate that all the sample rates divide into.

For lower end systems it may be better to use a simpler interpolator instead of
a real filter, considering that the main purpose of the filter is to remove
aliasing anyway. Good results will be obtained with sinc or cubic interpolation,
and even linear may be acceptable.

Here I will consider cubic interpolation on hardware without particularly fast
floating point operations. We will stick with the 64kHz master rate as the target
resampling rate, thus we need the following ratios:
2x, 4x, 5x, 6x, 8x, 10x, 12x, 16x.

We can use subsets of the 16x coefficient set for 8x, 4x and 2x, the 12x set for
6x, and the 10x set for 5x. So only three sets of interpolation coefficients are
needed: 16x, 12x and 10x.

The tables will be n+1 long to facilitate cn[x] = bn[n-x], dn[x] = an[n-x].

Computed in Python with
def cubic_coef(x):
    return [
        -0.5*x*x*x + x*x - 0.5*x,
        1.5*x*x*x - 2.5*x*x + 1,
        -1.5*x*x*x + 2*x*x + 0.5*x,
        0.5*x*x*x - 0.5*x*x
    ]

((-x3 + x2*2 - x) * a0 +
(3*x3 - 5*x2 + 2) * a1 +
(-3*x3 + 4*x2 + x) * a2 +
(x3 - x2) * a3) * 0.5

an = [cubic_coef(x/n)[0] for x in range(0, n+1)]
bn = [cubic_coef(x/n)[1] for x in range(0, n+1)]

a16 = [
    0.0, -0.0274658203125, -0.0478515625, -0.0618896484375, -0.0703125,
    -0.0738525390625, -0.0732421875, -0.0692138671875, -0.0625,
    -0.0538330078125, -0.0439453125, -0.0335693359375, -0.0234375,
    -0.0142822265625, -0.0068359375, -0.0018310546875, 0.0
]
b16 = [
    1.0, 0.9906005859375, 0.9638671875, 0.9219970703125, 0.8671875,
    0.8016357421875, 0.7275390625, 0.6470947265625, 0.5625, 0.4759521484375,
    0.3896484375, 0.3057861328125, 0.2265625, 0.1541748046875, 0.0908203125,
    0.0386962890625, 0.0
]
a12 = [
    0.0, -0.03501157407407407, -0.057870370370370364, -0.0703125,
    -0.07407407407407407, -0.0708912037037037, -0.0625, -0.05063657407407409,
    -0.037037037037037014, -0.0234375, -0.011574074074074125,
    -0.003182870370370308, 0.0
];
b12 = [
    1.0, 0.9835069444444444, 0.9375, 0.8671875, 0.7777777777777778,
    0.6744791666666666, 0.5625, 0.44704861111111105, 0.33333333333333337,
    0.2265625, 0.1319444444444443, 0.0546875, 0.0
]
a10 = [
    0.0, -0.04050000000000001, -0.06399999999999999, -0.0735,
    -0.07199999999999998, -0.0625, -0.04800000000000001,
    -0.03150000000000003, -0.016000000000000014, -0.0044999999999999546, 0.0
]
b10 = [
    1.0, 0.9765, 0.9119999999999999, 0.8155, 0.696, 0.5625,
    0.42400000000000004, 0.2895, 0.16800000000000015, 0.0685, 0.0
]